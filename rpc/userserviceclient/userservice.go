// Code generated by goctl. DO NOT EDIT!
// Source: userService.proto

//go:generate mockgen -destination ./userservice_mock.go -package userserviceclient -source $GOFILE

package userserviceclient

import (
	"context"

	"zeroService/rpc/userService"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	RegisterRequest  = userService.RegisterRequest
	RegisterResponse = userService.RegisterResponse

	UserService interface {
		// 注册
		Register(ctx context.Context, in *RegisterRequest) (*RegisterResponse, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

// 注册
func (m *defaultUserService) Register(ctx context.Context, in *RegisterRequest) (*RegisterResponse, error) {
	client := userService.NewUserServiceClient(m.cli.Conn())
	return client.Register(ctx, in)
}
